<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<!-- 1 配置类和表对应 
		class标签
		name属性：实体类全路径
		table属性：数据库表名称
	-->
	<class name="com.jiudianlianxian.entity.Customer" table="t_customer">
		<id name="cid" column="cid">
			<generator class="native"></generator>
		</id>
		<property name="custName" column="custName"></property>
		<property name="custLevel" column="custLevel"></property>
		<property name="custSource" column="custSource"></property>
		<property name="custPhone" column="custPhone"></property>
		<property name="custMobile" column="custMobile"></property>
		
		<!-- 在客户映射文件中，表示所有联系人 
			使用set标签表示所有联系人
			set标签里面有name属性：
			     属性值写在客户实体类里面表示联系人的set集合名称
			     
			 inverse属性默认值：false不放弃关系维护
			                true表示放弃关系维护
		-->
		<!-- inverse属性：默认false即不放弃维护外键的机会，true即放弃维护外键的机会   配置了inverse属性为true后，添加联系人时，就不会再客户方维护联系人的外键，需要再次手动维护    inverse="true"-->
		<!-- fetch属性：默认值select    -->	
		<!-- lazy属性：是否延迟查询   默认true 
		             false:不延迟查询，直接查询，不管后面是否使用所要查询的对象
		             extra：及其懒惰，延迟查询，根据你需要的值去查询，不需要的值就不会去查询 -->
		<set name="setLinkMan" cascade="save-update,delete" fetch="select" lazy="true">
			<!-- 一对多建表，有外键
				hibernate机制：双向维护外键，在一和多那一方都配置外键	修改时会修改两次，性能上有缺陷
				column属性值：外键名称
			 -->
			<key column="clid"></key>
			<!-- 客户所有的联系人，class里面写联系人实体类全路径 -->
			<one-to-many class="com.jiudianlianxian.entity.LinkMan"/>
		</set>
		
	</class>
</hibernate-mapping>